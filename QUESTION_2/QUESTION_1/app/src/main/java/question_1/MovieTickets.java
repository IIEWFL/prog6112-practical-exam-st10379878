/*
 * This source file was generated by the Gradle 'init' task
 */
package question_1;

public class MovieTickets implements IMovieTickets {

    //2D array to store monthly totals
    static int [][] movieTicketSales = {
        {3000, 1500, 1700},
        {3500, 1200, 1600}};
    //Single-D array to store technician names
    static String[] movies = {"Napolean", "Oppenheimer"};
    //Single-D to store the months
    static String[] months = {"JAN", "FEB", "MAR"};

    int [] ticketTotals = new int[2];

    public static void main(String[] args) {
        
    }
    //Top Movie
    @Override
    public int TopMovie(int[] ticketTotals) {
        //index for the value with the highest total movie sales
        int index = 0;
        if (ticketTotals[index] < ticketTotals[index + 1]) {
            index = 1;
        }

        return index;
    }


    public int TotalMovieSales(int[] movieTicketSales) {
        int cost = 0;
        //loop through the row / array and add the elements
        for (int index = 0; index < movieTicketSales.length; index++) {
            cost += movieTicketSales[index];
        }

        return cost;
    }

    //method to print the report
    public void printReport() {
        String output = "\nMOVIE TICKET SALES REPORT\n";
        output += String.format("%-15s %-15s %-15s %-15s ",
                "", months[0], months[1], months[2]);
        output += "\n--------------------------------------------------------\n";
        for (int row = 0; row < movieTicketSales.length; row++) {
            output += String.format("%-15s %-15s %-15s %-15s",
                    movies[row], movieTicketSales[row][0], movieTicketSales[row][1], movieTicketSales[row][2]) + "\n";
        }
        // calculate the total ticket sales 
        for(int row=0; row<movieTicketSales.length;row++){
            output += "\nTotal movie ticket sales for " + movies[row] + " " + TotalMovieSales(movieTicketSales[row]);
            //store the movie total in a new array
            ticketTotals[row]=TotalMovieSales(movieTicketSales[row]);
        }
        output+="\n";
 
        //find the top performing movie
        int indexGreatestAmount = TopMovie(ticketTotals);
        output+="\n\nTop performing movie: "+ movies[indexGreatestAmount];
        
        System.out.println(output);
    }
   
}
